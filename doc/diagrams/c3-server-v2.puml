@startuml c3-server-v2

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml

title Component Diagram\nMcEarl v2\nServer Peer Node
AddRelTag("dashed", $lineStyle = DashedLine())

Container_Boundary(boundary, "Server Peer Node") {
	Component(masterSup, "Master Supervisor", "Component: Erlang Supervisor Actor")
	Component(logger, "Logger", "Component: Erlang Worker Actor")
	Component(clientSup, "Client Supervisor", "Component: Erlang Supervisor Actor")
	Component(client1Comp, "Client Communicator", "Component: Erlang Worker Actor")
	Component(client2Comp, "Client Communicator", "Component: Erlang Worker Actor")
	Component(client3Comp, "Client Communicator", "Component: Erlang Worker Actor")
}

Container_Ext(origin, "Origin Node", "Container: Erlang Application")
ContainerDb_Ext(db, "Distributed Database", "Container: Mnesia")

Rel(origin, masterSup, "offloads connections to")
Rel(masterSup, logger, "supervises")
Rel(masterSup, clientSup, "supervises")
Rel(clientSup, client1Comp, "supervises")
Rel(clientSup, client2Comp, "supervises")
Rel(clientSup, client3Comp, "supervises")
Rel(client1Comp, db, "reads from & writes to")
Rel(client2Comp, db, "reads from & writes to")
Rel(client3Comp, db, "reads from & writes to")

LAYOUT_WITH_LEGEND()
@enduml
