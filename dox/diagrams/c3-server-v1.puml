@startuml server-v1

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml

title Component Diagram\nMcEarl v2\nServer
AddRelTag("dashed", $lineStyle = DashedLine())


Person(client1, "Client", "Plays Multiplayer")
Person(client2, "Client", "Plays Multiplayer")
Person(client3, "Client", "Plays Multiplayer")

Container_Boundary(boundary, "Server") {
	Component(masterSup, "Master Supervisor", "Component: Erlang Supervisor Actor")
	Component(logger, "Logger", "Component: Erlang Worker Actor")
	Component(listen, "TCP Listener", "Component: Erlang Worker Actor")
	Component(heartbeat, "Heartbeat", "Component: Erlang Worker Actor")
	Component(clientSup, "Client Supervisor", "Component: Erlang Supervisor Actor")
	Component(client1Comp, "Client Communicator", "Component: Erlang Worker Actor")
	Component(client2Comp, "Client Communicator", "Component: Erlang Worker Actor")
	Component(client3Comp, "Client Communicator", "Component: Erlang Worker Actor")
}

System_Ext(classicube, "Clssicube", "Hosts the server list")
ContainerDb_Ext(db, "Distributed Database", "Container: Mnesia")

Rel(client1, listen, "connects via")
Rel(client2, listen, "connects via")
Rel(client3, listen, "connects via")
Rel(heartbeat, classicube, "sends heartbeat packets to")
Rel(masterSup, logger, "supervises")
Rel(masterSup, clientSup, "supervises")
Rel(masterSup, listen, "supervises")
Rel(masterSup, heartbeat, "supervises")
Rel(clientSup, client1Comp, "supervises")
Rel(clientSup, client2Comp, "supervises")
Rel(clientSup, client3Comp, "supervises")
Rel(client1Comp, db, "reads from & writes to")
Rel(client2Comp, db, "reads from & writes to")
Rel(client3Comp, db, "reads from & writes to")

LAYOUT_WITH_LEGEND()
@enduml
